/**
 * Content Agent
 * Specializes in content strategy, copywriting, and messaging
 */

const BaseAgent = require('./base-agent');

class ContentAgent extends BaseAgent {
    constructor() {
        super(
            'Content Strategist',
            'Content Strategist & Copywriter',
            ['content', 'copywriting', 'messaging', 'seo-content', 'brand-voice']
        );
    }

    async execute(subtask) {
        await this.speak(`Developing content strategy for: ${subtask.description}`);

        try {
            // Analyze current content
            const currentContent = await this.analyzeCurrentContent();
            
            // Create content strategy
            const strategy = this.createContentStrategy();
            
            // Propose content improvements
            const improvements = this.proposeContentImprovements(currentContent);
            
            // Create content guide
            const contentGuide = this.createContentGuide(strategy, improvements);
            await this.writeFile('docs/content-strategy.md', contentGuide);

            await this.speak('Content strategy completed! I\'ve created a comprehensive content guide and messaging framework.');

            return {
                success: true,
                strategy: strategy,
                improvements: improvements,
                document: 'docs/content-strategy.md'
            };
        } catch (error) {
            await this.speak(`Content strategy encountered an issue: ${error.message}`);
            throw error;
        }
    }

    async analyzeCurrentContent() {
        try {
            const html = await this.readFile('index.html');
            
            // Extract headings
            const h1Matches = html.match(/<h1[^>]*>([^<]+)<\/h1>/g) || [];
            const h2Matches = html.match(/<h2[^>]*>([^<]+)<\/h2>/g) || [];
            const h3Matches = html.match(/<h3[^>]*>([^<]+)<\/h3>/g) || [];
            
            // Extract paragraphs
            const pMatches = html.match(/<p[^>]*>([^<]+)<\/p>/g) || [];
            
            return {
                headings: {
                    h1: h1Matches.map(h => h.replace(/<[^>]+>/g, '')),
                    h2: h2Matches.map(h => h.replace(/<[^>]+>/g, '')),
                    h3: h3Matches.map(h => h.replace(/<[^>]+>/g, ''))
                },
                paragraphs: pMatches.map(p => p.replace(/<[^>]+>/g, '')),
                tone: 'professional, technical',
                messaging: 'AI-driven customer support transformation'
            };
        } catch (error) {
            return {
                headings: { h1: [], h2: [], h3: [] },
                paragraphs: [],
                tone: 'unknown',
                messaging: 'unknown'
            };
        }
    }

    createContentStrategy() {
        return {
            brandVoice: {
                tone: 'Professional, confident, innovative',
                personality: 'Expert yet approachable, cutting-edge but reliable',
                style: 'Clear, concise, technical when needed'
            },
            messaging: {
                valueProposition: 'AI-Driven Customer Support Transformation',
                tagline: 'We are the strike team for customer support excellence',
                keyMessages: [
                    'Comprehensive solutions',
                    'Transform customer experience',
                    'Expert implementation',
                    'Proven results'
                ]
            },
            contentTypes: [
                'Service descriptions',
                'Case studies',
                'Blog posts',
                'Technical documentation',
                'Testimonials'
            ],
            keywords: [
                'AI customer support',
                'customer support automation',
                'support implementation',
                'customer experience',
                'AI integration',
                'process optimization'
            ]
        };
    }

    proposeContentImprovements(currentContent) {
        return [
            'Add more specific service descriptions',
            'Include customer testimonials',
            'Add case studies section',
            'Create blog content strategy',
            'Enhance call-to-action copy',
            'Add FAQ section',
            'Include team member profiles',
            'Add trust indicators (certifications, partnerships)'
        ];
    }

    createContentGuide(strategy, improvements) {
        return `# Content Strategy - DEPLOYHELP LLC
Generated by Content Strategist Agent

## Brand Voice

### Tone
${strategy.brandVoice.tone}

### Personality
${strategy.brandVoice.personality}

### Style
${strategy.brandVoice.style}

## Core Messaging

### Value Proposition
${strategy.messaging.valueProposition}

### Tagline
${strategy.messaging.tagline}

### Key Messages
${strategy.messaging.keyMessages.map(m => `- ${m}`).join('\n')}

## Content Types

${strategy.contentTypes.map(type => `- ${type}`).join('\n')}

## SEO Keywords

${strategy.keywords.map(kw => `- ${kw}`).join('\n')}

## Content Improvements

${improvements.map(imp => `- ${imp}`).join('\n')}

## Writing Guidelines

1. **Clarity**: Use clear, jargon-free language
2. **Benefit-focused**: Focus on client outcomes
3. **Proof**: Include data and examples
4. **Action-oriented**: Strong CTAs throughout
5. **SEO-friendly**: Natural keyword integration

## Content Calendar Suggestions

- Weekly blog posts on customer support topics
- Monthly case studies
- Quarterly service updates
- Regular social media content

Generated by Content Strategist Agent
`;
    }
}

module.exports = ContentAgent;
